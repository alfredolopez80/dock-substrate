(function() {var implementors = {};
implementors["dock_runtime"] = [{"text":"impl&lt;AccountId:&nbsp;Eq, BlockNumber:&nbsp;Eq, Hash:&nbsp;Eq&gt; Eq for RawEvent&lt;AccountId, BlockNumber, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Eq for Bytes32","synthetic":false,"types":[]},{"text":"impl Eq for Bytes33","synthetic":false,"types":[]},{"text":"impl Eq for Bytes64","synthetic":false,"types":[]},{"text":"impl Eq for Bytes65","synthetic":false,"types":[]},{"text":"impl Eq for PublicKey","synthetic":false,"types":[]},{"text":"impl Eq for DidSignature","synthetic":false,"types":[]},{"text":"impl Eq for Event","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Call:&nbsp;Eq&gt; Eq for RawEvent&lt;Call&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Eq for Policy","synthetic":false,"types":[]},{"text":"impl Eq for Registry","synthetic":false,"types":[]},{"text":"impl Eq for Revoke","synthetic":false,"types":[]},{"text":"impl Eq for UnRevoke","synthetic":false,"types":[]},{"text":"impl Eq for RemoveRegistry","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Eq for SessionKeys","synthetic":false,"types":[]},{"text":"impl Eq for Runtime","synthetic":false,"types":[]},{"text":"impl Eq for Event","synthetic":false,"types":[]},{"text":"impl Eq for OriginCaller","synthetic":false,"types":[]},{"text":"impl Eq for Call","synthetic":false,"types":[]}];
implementors["forked_pallet_democracy"] = [{"text":"impl Eq for Conviction","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Eq&gt; Eq for Tally&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Eq&gt; Eq for Delegations&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;BlockNumber:&nbsp;Eq, Hash:&nbsp;Eq, Balance:&nbsp;Eq&gt; Eq for ReferendumStatus&lt;BlockNumber, Hash, Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;BlockNumber:&nbsp;Eq, Hash:&nbsp;Eq, Balance:&nbsp;Eq&gt; Eq for ReferendumInfo&lt;BlockNumber, Hash, Balance&gt;","synthetic":false,"types":[]},{"text":"impl Eq for Vote","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Eq&gt; Eq for AccountVote&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Eq, AccountId:&nbsp;Eq, BlockNumber:&nbsp;Eq&gt; Eq for Voting&lt;Balance, AccountId, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl Eq for VoteThreshold","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Eq, AccountId:&nbsp;Eq, Hash:&nbsp;Eq, BlockNumber:&nbsp;Eq&gt; Eq for RawEvent&lt;Balance, AccountId, Hash, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["poa"] = [{"text":"impl&lt;AccountId:&nbsp;Eq, BlockNumber:&nbsp;Eq, Balance:&nbsp;Eq&gt; Eq for RawEvent&lt;AccountId, BlockNumber, Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["simple_democracy"] = [{"text":"impl Eq for Event","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["token_migration"] = [{"text":"impl&lt;Balance:&nbsp;Eq, BlockNumber:&nbsp;Eq&gt; Eq for Bonus&lt;Balance, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Eq, Balance:&nbsp;Eq, BlockNumber:&nbsp;Eq&gt; Eq for RawEvent&lt;AccountId, Balance, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait&gt; Eq for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Eq for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Eq + Trait + Send + Sync&gt; Eq for OnlyMigrator&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()